<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Super Manager</title>

    <!-- Bootstrap core CSS -->
    <link href="lib/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/dashboard.css" rel="stylesheet">

    <!-- Just for debugging purposes. Don't actually copy this line! -->
    <!--[if lt IE 9]><script src="../../assets/js/ie8-responsive-file-warning.js"></script><![endif]-->

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
  <style type="text/css" id="holderjs-style"><!--

/* Effective stylesheet produced by snapshot save */

--></style><style type="text/css"><!--

/* Effective stylesheet produced by snapshot save */

#lleo_dialog *::before, #lleo_dialog *::after { content: ""; }

--></style>

    <script src="lib/jquery/jquery.js"></script>
<!-- TreeView init-->
	<link href="lib/bootstrap-treeview/bootstrap-treeview.min.css" rel="stylesheet">
	
<!-- TagsInput init-->
	<link href="lib/bootstrap-tagsinput/bootstrap-tagsinput.css" rel="stylesheet">
	
<!-- TinyMCE init-->
<script src="lib/tinymce/js/tinymce/tinymce.min.js"></script>
<script src="lib/tinymce/js/tinymce/jquery.tinymce.min.js"></script>

<script src="lib/knockout/knockout-3.4.0.js"></script>
<script src="lib/knockout-tinymce-binding/wysiwyg.js"></script>

	<script>
	
	/*tinymce.init({
	selector:'textarea',
	//theme : 'advanced',
	plugins : 'autoresize',
	width: '100%',
	autoresize_min_height: 400,
    autoresize_max_height: 800,
	});*/
	</script>
	<script>
	tinymce.init();
	/*tinymce.init({
	  selector: 'h3.editable',
	  inline: true,
	  toolbar: 'undo redo',
	  menubar: false
	});*/
	</script>

</head>

  <body>

    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container-fluid">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Менеджер мечты</a>
        </div>
        <div class="navbar-collapse collapse">
          <ul class="nav navbar-nav navbar-right">
			<li><a data-toggle="tab" href="#note">Заметки</a></li>
            <li><a data-toggle="tab" href="#tagsview">Тэги</a></li>
			<li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">Материалы<b class="caret"></b></a>
                <ul class="dropdown-menu">
                  <li><a href="#">Аудио</a></li>
                  <li><a href="#">Фото</a></li>
                  <li><a href="#">Файлы</a></li>
                </ul>
              </li>	
          </ul>
          <form class="navbar-form navbar-right">
            <input class="form-control" placeholder="Search..." type="text">
          </form>
        </div>
      </div>
    </div>

    <div class="container-fluid">
      <div class="row">
        <div class="col-sm-3 col-md-2 sidebar">

			 <div id="notelist">
			  <ul data-bind="foreach: notes" class="nav nav-sidebar">
				<li class="noteitem"><a href="#" data-bind="click: $parent.open"><span data-bind="text: name"> </span></a></li>
			  </ul>
			</div>
        </div>
        <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
			<div class="tab-content">
				<div id="note" class="tab-pane fade in active">
				  <h3 class="page-header editable" data-bind="wysiwyg: notename, wysiwygConfig: { inline: true, toolbar: 'undo redo', menubar: false }" >Название заметки</h3>
					<p>
				  <div class="ui-widget">
					<label for="tagwidget">Тэги: </label>
					<input type="text" id="tagwidget" data-role="tagsinput">
				  </div>
					</p>
				  <textarea id = "editor" data-bind="wysiwyg: content" ></textarea>
				  <div id="preview" data-bind="html: content"></div>
				  <div id="test" data-bind="html: notename"></div>
				</div>
				
				<div id="tagsview" class="tab-pane fade">
					<h3>Тэги</h3>
					<div id="tree">
					</div>
				</div>
				  
			</div>
        </div>
    </div>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="lib/bootstrap/js/bootstrap.min.js"></script>
    <script src="js/docs.min.js"></script>
  
  	<script src="lib/bootstrap-treeview/bootstrap-treeview.min.js"></script>
	<script src="lib/bootstrap-tagsinput/bootstrap-tagsinput.min.js"></script>
	<script src="lib/typeahead/typeahead.bundle.js"></script>
	
	<script>
	
	var vm;
	var nvm;
	var timer;
	var noteid = -1;
	
	(function( $, ko ) {

            ko.bindingHandlers['wysiwyg'].defaults = {
                'plugins': [ 'link' ],
                'toolbar': 'undo redo | bold italic | bullist numlist | link',
                'menubar': false,
                'statusbar': false
            };

            function ViewModel( content,notename ) {
                var self = this;
                self.content = ko.observable( content );
                self.notename = ko.observable( notename );
            };
            
            function NotesViewModel( notesArray ) {
                var self = this;
                    self.notes = ko.observableArray(notesArray);
		self.open = function(note) {
		    noteCurrent = note;
		    saveCurrentNote();
		    $.getJSON("/getNoteById?id="+note.id, function(data) { 
		      noteid = note.id;
		      vm.content(data.content);
		      vm.notename(data.name);
		    })
		};
            };
            
            function saveCurrentNote(){
	      if(noteid!=-1){
		 // nvm.notes()[]
		  $.post("/storeNote", { id:noteid, name: vm.notename(), content: vm.content(), type:0, url:""},
		  function(data){
		    console.log(data);
		  });
		  $.getJSON("/getNoteList", function(data) { 
		      nvm.notes(data);
		    });   
	      }
            }

            
            $( document ).ready( function() {
		    vm = new ViewModel( "","" );
		    nvm = new NotesViewModel( [] );
		    ko.applyBindings( nvm, document.getElementById("notelist"));
		    ko.applyBindings( vm, document.getElementById("note") );
		    
		     $.getJSON("/getNoteList", function(data) { 
		      nvm.notes(data);
		    });    
		    
		    timer = setInterval(saveCurrentNote, 10000);
            });

        }( jQuery, ko ));
	
	

	
	
		var data = [
	  {
		text: "Parent 1",
		nodes: [
		  {
			text: "Child 1",
			nodes: [
			  {
				text: "Grandchild 1"
			  },
			  {
				text: "Grandchild 2"
			  }
			]
		  },
		  {
			text: "Child 2"
		  }
		]
	  },
	  {
		text: "Parent 2"
	  },
	  {
		text: "Parent 3"
	  },
	  {
		text: "Parent 4"
	  },
	  {
		text: "Parent 5"
	  }
	];

	$('#tree').treeview({
	  data: data
	});
	
	var citynames = new Bloodhound({
	  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
	  queryTokenizer: Bloodhound.tokenizers.whitespace,
	 /* // If the source is on your server
	 prefetch: {
		url: 'assets/citynames.json',
		filter: function(list) {
		  return $.map(list, function(cityname) {
			return { name: cityname }; });
		}
	  }*/
	  // 
	  remote: {
		url: "http://vocab.nic.in/rest.php/country/json",
		filter: function(list) {      
		  return $.map(list.countries, function(response) {
			return { name: response.country_name }; });
		}
	  }
	});
	citynames.initialize();
	
	$('input').tagsinput({
	  typeaheadjs: {
		name: 'citynames',
		displayKey: 'name',
		valueKey: 'name',
		source: citynames.ttAdapter()
	  }
	});
	
	</script>
</body></html>