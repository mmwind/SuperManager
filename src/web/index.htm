<!DOCTYPE html><html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Super Manager</title>

    <!-- Bootstrap core CSS -->
    <link href="lib/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/dashboard.css" rel="stylesheet">

    <!-- Just for debugging purposes. Don't actually copy this line! -->
    <!--[if lt IE 9]><script src="../../assets/js/ie8-responsive-file-warning.js"></script><![endif]-->

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
  <style type="text/css" id="holderjs-style"><!--

/* Effective stylesheet produced by snapshot save */

--></style><style type="text/css"><!--

/* Effective stylesheet produced by snapshot save */

#lleo_dialog *::before, #lleo_dialog *::after { content: ""; }

--></style>

    <script src="lib/jquery/jquery.js"></script>
<!-- TreeView init-->
	<link href="lib/bootstrap-treeview/bootstrap-treeview.min.css" rel="stylesheet">
	
<!-- TagsInput init-->
	<link href="lib/bootstrap-tagsinput/bootstrap-tagsinput.css" rel="stylesheet">
	
<!-- TinyMCE init-->
<script src="lib/tinymce/js/tinymce/tinymce.min.js"></script>
<script src="lib/tinymce/js/tinymce/jquery.tinymce.min.js"></script>

<script src="lib/knockout/knockout-3.4.0.js"></script>
<script src="lib/knockout-tinymce-binding/wysiwyg.js"></script>
<script src="lib/crypto/sha256.js"></script>

<script src="lib/jfeed/jquery.jfeed.js?version=1"></script>

	<script>
	
	/*tinymce.init({
	selector:'textarea',
	//theme : 'advanced',
	plugins : 'autoresize',
	width: '100%',
	autoresize_min_height: 400,
    autoresize_max_height: 800,
	});*/
	</script>
	<script>
	tinymce.init();
	/*tinymce.init({
	  selector: 'h3.editable',
	  inline: true,
	  toolbar: 'undo redo',
	  menubar: false
	});*/
	</script>

</head>

  <body>

    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container-fluid">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Менеджер мечты</a>
        </div>
        <div class="navbar-collapse collapse">
          <ul class="nav navbar-nav navbar-right">
	    <li><a data-toggle="tab" href="#note">Заметки</a></li>
            <li><a data-toggle="tab" href="#tagsview">Тэги</a></li>
            <li><a data-toggle="tab" href="#newsview">Новости</a></li>
            <li><a data-toggle="tab" href="#newsview">Библиотека</a></li>
            <li><a data-toggle="tab" href="#newsview">Файлы</a></li>
			<li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">Материалы<b class="caret"></b></a>
                <ul class="dropdown-menu">
                  <li><a href="#">Аудио</a></li>
                  <li><a href="#">Фото</a></li>
                  <li><a href="#">Файлы</a></li>
                </ul>
              </li>	
          </ul>
          <form class="navbar-form navbar-right">
            <input class="form-control" placeholder="Search..." type="text">
          </form>
        </div>
      </div>
    </div>

    <div class="container-fluid">
      <div class="row">
        <div id="scroller" class="col-sm-3 col-md-2 sidebar">

			 <div id="notelistcontainer">
			  <ul id="notelist" data-bind="foreach: notes" class="nav nav-sidebar">
				<li class="noteitem"><a href="#" data-bind="click: $parent.open"><span data-bind="text: name"> </span></a></li>
			  </ul>
			</div>
        </div>
        <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
			<div class="tab-content">
				<div id="note" class="tab-pane fade in active">
				  <h3 class="page-header editable" data-bind="wysiwyg: notename, wysiwygConfig: { inline: true, toolbar: 'undo redo', menubar: false }" >Название заметки</h3>
					<p>
				  <div class="ui-widget">
					<label for="tagwidget">Тэги: </label>
					<input type="text" id="tagwidget" data-role="tagsinput">
				  </div>
					</p>
				  <textarea id = "editor" data-bind="wysiwyg: content" ></textarea>
				  <--div id="preview" data-bind="html: content"></div--!>
				  <--div id="test" data-bind="html: notename"></div--!>
				</div>
				
				<div id="tagsview" class="tab-pane fade">
					<h3>Тэги</h3>
					<div id="tree">
					</div>
					
						<!-- Button trigger modal -->
						<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
						  Добавить тэг
						</button>
						
						
						<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
						  <div class="modal-dialog" role="document">
						    <div class="modal-content">
						      <div class="modal-header">
						        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
						        <h4 class="modal-title" id="myModalLabel">Добавление тэга</h4>
						      </div>
						      <div class="modal-body">
						        <select data-bind="foreach: tagslist" class="form-control">
								  <option data-bind="text: name">1</option>
								</select>
								<input type="text" class="form-control" placeholder="Text input">
						      </div>
						      <div class="modal-footer">
						        <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
						        <button type="button" class="btn btn-primary">Создать</button>
						      </div>
						    </div>
						  </div>
						</div>
						
						<!-- Modal 
						
						<select data-bind="foreach: tagslist" class="form-control">
						  <option data-bind="text: name">1</option>
						</select>-->

				</div>
				
				<div id="newsview" class="tab-pane fade">
					<h3>RSS</h3>
					<div id="feed">
					</div>
				</div>
				  
			</div>
        </div>
    </div>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="lib/bootstrap/js/bootstrap.min.js"></script>
    <script src="js/docs.min.js"></script>
  
  	<script src="lib/bootstrap-treeview/bootstrap-treeview.min.js"></script>
	<script src="lib/bootstrap-tagsinput/bootstrap-tagsinput.min.js"></script>
	<script src="lib/typeahead/typeahead.bundle.js"></script>
	
	<script>
	
	var vm;
	var nvm;
	var tagsvm;
	var timer;
	var noteid = -1;
	var tree;
	var taglist;
	
	(function( $, ko ) {

            ko.bindingHandlers['wysiwyg'].defaults = {
                'plugins': [ 'link' ],
                'toolbar': 'undo redo | bold italic | bullist numlist | link',
                'menubar': false,
                'statusbar': false,
                'height' : "600"

            };

            function ViewModel( content,notename ) {
                var self = this;
                self.content = ko.observable( content );
                self.notename = ko.observable( notename );
            };
            
            function NotesViewModel( notesArray ) {
                var self = this;
                    self.notes = ko.observableArray(notesArray);
					self.open = function(note) {
					    noteCurrent = note;
					    saveCurrentNote();
					    $.getJSON("/getNoteById?id="+note.id, function(data) { 
					      noteid = note.id;
					      vm.content(data.content);
					      vm.notename(data.name);
					    })
					};
            };
            
            function TagsViewModel( tagsTree, tagsArray ) {
                var self = this;
                    self.tagslist = ko.observableArray(tagsArray);
                    self.tagsTree = ko.observableArray(tagsTree);
					self.addtag = function(tag) {

					};
            };
            
            function saveCurrentNote(){
		      if(noteid!=-1){
			 // nvm.notes()[]
			 var h = Sha256.hash(vm.content()).toUpperCase();
			 if(h != noteCurrent.hash){
			      $.post("/storeNote", { id:noteid, name: vm.notename(), content: vm.content(), type:0, url:""},
			      function(data){
					console.log(data);
					noteCurrent.hash = h;
					noteCurrent.name = vm.notename();
					noteCurrent.content = vm.content();
			      });
			      $.getJSON("/getNoteList", function(data) { 
				  	nvm.notes(data);
				  });  
			  }
		      }
            }

            
            $( document ).ready( function() {
		    vm = new ViewModel( "","" );
		    nvm = new NotesViewModel( [] );
		    tagsvm = new TagsViewModel( [],[] );
		    ko.applyBindings( nvm, document.getElementById("notelistcontainer"));
		    ko.applyBindings( vm, document.getElementById("note") );
		    ko.applyBindings( tagsvm, document.getElementById("tagsview") );
		    
		     $.getJSON("/getNoteList", function(data) { 
		      nvm.notes(data);
		    });    
		    
		     
		     $.getJSON("/getTree", function(data) { 
		    	 tree=data;
		    	 tree = tree.filter(function(n){ return n != undefined }); 
		    	 console.log(tree);
		    	 
		    	 	$('#tree').treeview({
		    			  data: tree
		    		});
			 });    
		     
		     $.getJSON("/getTagList", function(data) { 
		    	 taglist=data;
		    	 tagsvm.tagslist(data);
		    	 console.log(data);
			 });  
		     
		    timer = setInterval(saveCurrentNote, 10000);
		    
		    
		    $( "#scroller" ).scroll(function(element) {
		      if($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
			    console.log('end reached, just download new items by ajax and add and renew UI with Knockout');
			    // SELECT * FROM objects LIMIT ? OFFSET ?;
			}
		    });
            });

        }( jQuery, ko ));
	
	/*
	 tree = [
	            {
	               "id" : 3,
	               "nodes" : [
	                  {
	                     "id" : 5,
	                     "text" : "Внутри тэг А"
	                  },
	                  {
	                     "id" : 6,
	                     "text" : "Внутри тэг Б"
	                  }
	               ],
	               "text" : "Родитель"
	            },
	            {
	               "id" : 4,
	               "nodes" : [
	                  {
	                     "id" : 7,
	                     "text" : "Внутри тэг Друого"
	                  }
	               ],
	               "text" : "Другой Родитель"
	            }
	         ];*/
	

	
	var citynames = new Bloodhound({
	  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
	  queryTokenizer: Bloodhound.tokenizers.whitespace,
	 /* // If the source is on your server
	 prefetch: {
		url: 'assets/citynames.json',
		filter: function(list) {
		  return $.map(list, function(cityname) {
			return { name: cityname }; });
		}
	  }*/
	  // 
	  remote: {
		url: "http://vocab.nic.in/rest.php/country/json",
		filter: function(list) {      
		  return $.map(list.countries, function(response) {
			return { name: response.country_name }; });
		}
	  }
	});
	citynames.initialize();
	
	$('input').tagsinput({
	  typeaheadjs: {
		name: 'citynames',
		displayKey: 'name',
		valueKey: 'name',
		source: citynames.ttAdapter()
	  }
	});
	
	
	jQuery(function() {
    jQuery.getFeed({
        url: './rss.xml',
        success: function(feed) {
        
            jQuery('#feed').append('<h2>'
            + '<a href="'
            + feed.link
            + '">'
            + feed.title
            + '</a>'
            + '</h2>');
            
            var html = '';
            
            for(var i = 0; i < feed.items.length && i < 5; i++) {
            
                var item = feed.items[i];
                
                html += '<h3>'
                + '<a href="'
                + item.link
                + '">'
                + item.title
                + '</a>'
                + '</h3>';
                
                html += '<div class="updated">'
                + item.updated
                + '</div>';
                
                html += '<div>'
                + item.description
                + '</div>';
            }
            
            jQuery('#feed').append(html);
        }    
    });
});

	</script>
</body></html>